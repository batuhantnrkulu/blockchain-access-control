spring.application.name=access-control-system
spring.config.import=optional:file:.env[.properties]

# smart contract configuration with ganache
ganache.address=http://127.0.0.1:8545

#contract addresses
admin.address=0xcE258D19910AA3fF348A87D77a10df67192D6324
admin.private-key=0xe8170e35aa9537f24f6fcb4099eb419e09aea71e5ff9777fa2539a2c0ec6ee91

contract.roleTokenAddress=0x5AE9Aaf7Db38d10fB4C8035d799052368B16d73B
contract.accessControlFactoryAddress=0x47057936da2B9C30D24b4a33248A7f46338D2bD6

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/blockchain_system?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234

# Hibernate Configuration
# Options: none, validate, update, create, create-drop
spring.jpa.properties.hibernate.default_schema = blockchain_system
spring.jpa.hibernate.ddl-auto=update  
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Encryptor's secret key
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_SECRET_KEY}
aes.secret.key=${AES_ENCRYPTOR_SECRET_KEY}

management.server.port=9091

# Enable actuator endpoints
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.prometheus.enabled=true

# Metrics configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.enable.all=true

# Custom metrics tags
management.metrics.tags.application=access-control-system
management.metrics.enable.role.bulk.assign.time=true
management.metrics.enable.role.bulk.assign.errors=true
management.metrics.enable.role.bulk.assign.total=true
management.metrics.enable.consensus.gini.*=true
management.metrics.enable.consensus.validators.*=true